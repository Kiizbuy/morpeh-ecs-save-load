#if UNITY_EDITOR
using System;
using System.IO;
using System.Linq;
using Core.ECS.SaveLoad;
using UnityEditor;
using UnityEngine;

public static class SaveLoadServiceGenerator
{

    [MenuItem("Tools/Codegen MorpehEcsSaveLoadService")]
    public static void GenerateSaveComponents()
    {
        var saveableComponents = AppDomain.CurrentDomain.GetAssemblies()
            .SelectMany(a => a.GetTypes())
            .Where(t => t.IsValueType && 
                       typeof(ISaveableComponent).IsAssignableFrom(t))
            .OrderBy(t => t.Namespace)
            .ThenBy(t => t.Name)
            .ToList();
        
        var path = $"Assets/Scripts/Generated/{nameof(MorpehEcsSaveLoadService)}.Generated.cs";
        Directory.CreateDirectory(Path.GetDirectoryName(path));

        using (var writer = new StreamWriter(path))
        {
            writer.WriteLine("// <auto-generated>");
            writer.WriteLine("//     This code was generated by a tool.");
            writer.WriteLine("//     Changes will be lost if the code is regenerated.");
            writer.WriteLine("// </auto-generated>");
            writer.WriteLine();
            writer.WriteLine("using System.Collections.Generic;");
            writer.WriteLine("using Scellecs.Morpeh;");
            writer.WriteLine("using UnityEngine.Scripting;");
            writer.WriteLine();
            writer.WriteLine("namespace Core.ECS.SaveLoad");
            writer.WriteLine("{");
            writer.WriteLine("     [Preserve]");
            writer.WriteLine($"    public partial class {nameof(MorpehEcsSaveLoadService)}");
            writer.WriteLine("    {");
            writer.WriteLine("        [Preserve]");
            writer.WriteLine("        partial void TrySaveComponents(Entity entity, List<ComponentSaveData> componentList)");
            writer.WriteLine("        {");
            
            var groupedComponents = saveableComponents.GroupBy(t => t.Namespace);
            
            foreach (var group in groupedComponents)
            {
                if (!string.IsNullOrEmpty(group.Key))
                {
                    writer.WriteLine($"            // {group.Key} components");
                }
                
                foreach (var componentType in group)
                {
                    writer.WriteLine($"            TrySaveComponent<{componentType.FullName}>(entity, componentList);");
                }
                
                writer.WriteLine();
            }
            
            writer.WriteLine("        }");
            writer.WriteLine("    }");
            writer.WriteLine("}");
        }

        AssetDatabase.Refresh();
        Debug.Log($"Generated save components for {saveableComponents.Count} types in {path}");
    }
}
#endif